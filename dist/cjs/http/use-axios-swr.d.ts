import { AxiosError, AxiosRequestConfig } from "axios";
import { Key, KeyLoader, SWRConfiguration, SWRResponse, mutate } from "swr";
import { SWRInfiniteConfiguration, SWRInfiniteResponse } from "swr/infinite";
export declare type AxiosSWRError = AxiosError;
export declare type AxiosSWRResponse<T> = SWRResponse<T, AxiosSWRError>;
export declare type AxiosSWRInfiniteResponse<T> = SWRInfiniteResponse<T, AxiosSWRError>;
export declare type AxiosSWRConfiguration<T> = SWRConfiguration<T, AxiosError> & AxiosRequestConfig;
export declare type AxiosSWRInfiniteConfiguration<T> = SWRInfiniteConfiguration<T, AxiosSWRError> & AxiosRequestConfig;
export declare const axiosFetcher: (options?: AxiosRequestConfig) => <ResponseData>(url: string) => Promise<ResponseData>;
export declare const useAxiosSWR: <ResponseData>(key: Key, options?: AxiosSWRConfiguration<ResponseData>) => AxiosSWRResponse<ResponseData>;
export declare const useAxiosSWRInfinite: <ResponseData>(key: (index: number, previousPageData: ResponseData) => import("swr/dist/types").ValueKey, options?: AxiosSWRInfiniteConfiguration<ResponseData>) => AxiosSWRInfiniteResponse<ResponseData>;
export { mutate };
